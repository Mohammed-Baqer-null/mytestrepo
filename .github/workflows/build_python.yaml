name: Build Python for Android

on:
  workflow_dispatch:
    inputs:
      python_version:
        description: 'Python version to build'
        required: true
        default: 'main'
        type: string
      android_api:
        description: 'Android API level'
        required: true
        default: '27'
        type: string
      arch:
        description: 'Architecture to build for'
        required: true
        default: 'arm64-v8a'
        type: choice
        options:
          - arm64-v8a
          - armeabi-v7a
          - x86
          - x86_64
      static_build:
        description: 'Build static Python'
        required: true
        default: true
        type: boolean

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout CPython repository
        uses: actions/checkout@v4
        with:
          repository: python/cpython
          ref: ${{ github.event.inputs.python_version }}
          fetch-depth: 1
      
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
      
      - name: Install Android NDK
        run: |
          echo "y" | sdkmanager "ndk;25.2.9519653"
          echo "NDK_HOME=$ANDROID_SDK_ROOT/ndk/25.2.9519653" >> $GITHUB_ENV
          echo "ANDROID_NDK_HOME=$ANDROID_SDK_ROOT/ndk/25.2.9519653" >> $GITHUB_ENV
          echo "ANDROID_NDK_ROOT=$ANDROID_SDK_ROOT/ndk/25.2.9519653" >> $GITHUB_ENV
      
      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            libffi-dev \
            libssl-dev \
            zlib1g-dev \
            libbz2-dev \
            libreadline-dev \
            libsqlite3-dev \
            wget curl llvm \
            libncurses5-dev \
            xz-utils tk-dev \
            libxml2-dev \
            libxmlsec1-dev \
            git automake autoconf \
            libtool pkg-config
      
      - name: Set HOST based on architecture
        run: |
          case "${{ github.event.inputs.arch }}" in
            "arm64-v8a") HOST="aarch64-linux-android" ;;
            "armeabi-v7a") HOST="armv7a-linux-androideabi" ;;
            "x86") HOST="i686-linux-android" ;;
            "x86_64") HOST="x86_64-linux-android" ;;
          esac
          echo "HOST=$HOST" >> $GITHUB_ENV
          echo "Selected architecture: ${{ github.event.inputs.arch }}"
          echo "Set HOST to: $HOST"
      
      - name: Build Python for Android
        run: |
          cd Android
          
          if [ ! -f "android.py" ]; then
            echo "Error: android.py script not found!"
            ls -la
            exit 1
          fi
          
          # Build with explicit HOST parameter
          echo "Building Python with host: $HOST"
          python3 android.py build "$HOST"
          
          if [ $? -ne 0 ]; then
            echo "Build failed!"
            exit 1
          fi
          
          # Verify build output
          if [ -d "../cross-build/build" ]; then
            echo "Build artifacts:"
            ls -la ../cross-build/build/
          else
            echo "No build directory created!"
            exit 1
          fi
      
      - name: Package artifacts
        run: |
          mkdir -p python-android-build
          cd Android
          
          if [ -d "../cross-build/$HOST" ]; then
            echo "Copying build artifacts from cross-build/$HOST..."
            cp -rv "../cross-build/$HOST"/* ../python-android-build/
            echo "Copied artifacts:"
            ls -la ../python-android-build/
          elif [ -d "../cross-build/build" ]; then
            echo "Copying build artifacts from cross-build/build..."
            cp -rv ../cross-build/build/* ../python-android-build/
            echo "Copied artifacts:"
            ls -la ../python-android-build/
          else
            echo "Build directories not found!"
            ls -la ../cross-build/
            exit 1
          fi
      
      - name: Verify architecture of built binaries
        run: |
          echo "Verifying architecture of built binaries..."
          find python-android-build/ -name "*.so" -o -name "libpython*" | xargs file || true
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: python-android-${{ github.event.inputs.arch }}-api${{ github.event.inputs.android_api }}
          path: python-android-build/
