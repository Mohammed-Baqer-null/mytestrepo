name: Build Python for Android

on:
  workflow_dispatch:
    inputs:
      python_version:
        description: 'Python version to build'
        required: true
        default: 'main'
        type: string
      android_api:
        description: 'Android API level'
        required: true
        default: '27'
        type: string
      arch:
        description: 'Architecture to build for'
        required: true
        default: 'arm64-v8a'
        type: choice
        options:
          - arm64-v8a
          - armeabi-v7a
          - x86
          - x86_64
      static_build:
        description: 'Build static Python'
        required: true
        default: true
        type: boolean

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout CPython repository
        uses: actions/checkout@v4
        with:
          repository: python/cpython
          ref: ${{ github.event.inputs.python_version }}
          fetch-depth: 1
      
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'
      
      - name: Setup Android SDK
        uses: android-actions/setup-android@v2
        
      - name: Install Android NDK
        run: |
          echo "y" | sdkmanager "ndk;25.2.9519653"
          echo "NDK_HOME=$ANDROID_SDK_ROOT/ndk/25.2.9519653" >> $GITHUB_ENV
      
      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libffi-dev libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev xz-utils tk-dev libxml2-dev libxmlsec1-dev
      
      - name: Check Android directory contents
        run: |
          ls -la
          if [ -d "Android" ]; then
            echo "Android directory exists"
            ls -la Android/
          else
            echo "Android directory not found!"
            exit 1
          fi
      
      - name: Prepare Android environment
        run: |
          # Source the Android environment script
          cd Android
          if [ -f "android-env.sh" ]; then
            chmod +x android-env.sh
            . ./android-env.sh
            echo "Android environment script sourced"
          else
            echo "android-env.sh not found!"
            exit 1
          fi
          
          # Export variables needed by android.py
          echo "ANDROID_NDK_HOME=$NDK_HOME" >> $GITHUB_ENV
          echo "ANDROID_NDK_ROOT=$NDK_HOME" >> $GITHUB_ENV
          
      - name: Build Python for Android
        run: |
          cd Android
          
          # Check if android.py exists
          if [ ! -f "android.py" ]; then
            echo "Error: android.py script not found!"
            ls -la
            exit 1
          fi
          
          # Set build options based on inputs
          BUILD_OPTS="--arch ${{ github.event.inputs.arch }} --api ${{ github.event.inputs.android_api }}"
          
          if ${{ github.event.inputs.static_build }}; then
            BUILD_OPTS="$BUILD_OPTS --static"
          fi
          
          echo "Running Android Python builder with options: $BUILD_OPTS"
          
          # Run the Android Python builder with verbose output
          python3 android.py $BUILD_OPTS
          
          # Check build result
          if [ $? -ne 0 ]; then
            echo "Build failed!"
            exit 1
          fi
      
      - name: Package artifacts
        run: |
          mkdir -p python-android-build
          cd Android
          
          # Find and copy the built Python
          if [ -d "build" ]; then
            cp -r build/* ../python-android-build/
          else
            echo "Build directory not found!"
            ls -la
            exit 1
          fi
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: python-android-${{ github.event.inputs.arch }}-api${{ github.event.inputs.android_api }}
          path: python-android-build/
